# OASIS_START
# DO NOT EDIT (digest: 21600dcbb2a5e83d7bdf280b15308e3f)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenstore
"core/xenstore.cmxs": use_xenstore
<core/*.ml{,i}>: pkg_lwt
<core/*.ml{,i}>: pkg_cstruct
<core/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_client
"client/xenstore_client.cmxs": use_xenstore_client
<client/*.ml{,i}>: use_xenstore
<client/*.ml{,i}>: pkg_lwt
<client/*.ml{,i}>: pkg_cstruct
<client/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_server
"server/xenstore_server.cmxs": use_xenstore_server
<server/*.ml{,i}>: use_xenstore
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_cstruct
<server/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_unix
"unix/xenstore_unix.cmxs": use_xenstore_unix
<unix/*.ml{,i}>: oasis_library_xenstore_unix_ccopt
"unix/xenstore_stubs.c": oasis_library_xenstore_unix_ccopt
<unix/xenstore_unix.{cma,cmxa}>: oasis_library_xenstore_unix_cclib
"unix/libxenstore_unix_stubs.lib": oasis_library_xenstore_unix_cclib
"unix/dllxenstore_unix_stubs.dll": oasis_library_xenstore_unix_cclib
"unix/libxenstore_unix_stubs.a": oasis_library_xenstore_unix_cclib
"unix/dllxenstore_unix_stubs.so": oasis_library_xenstore_unix_cclib
<unix/xenstore_unix.{cma,cmxa}>: use_libxenstore_unix_stubs
<unix/*.ml{,i}>: use_xenstore_server
<unix/*.ml{,i}>: use_xenstore
<unix/*.ml{,i}>: pkg_lwt
<unix/*.ml{,i}>: pkg_cstruct
<unix/*.ml{,i}>: pkg_cstruct.syntax
"unix/xenstore_stubs.c": use_xenstore_server
"unix/xenstore_stubs.c": use_xenstore
"unix/xenstore_stubs.c": pkg_lwt
"unix/xenstore_stubs.c": pkg_cstruct
"unix/xenstore_stubs.c": pkg_cstruct.syntax
# Executable xen_stubdom
<xen/sleep.{m.o,native,byte}>: use_xenstore_server
<xen/sleep.{m.o,native,byte}>: use_xenstore
<xen/sleep.{m.o,native,byte}>: pkg_lwt
<xen/sleep.{m.o,native,byte}>: pkg_mirage
<xen/sleep.{m.o,native,byte}>: pkg_cstruct
<xen/sleep.{m.o,native,byte}>: pkg_cstruct.syntax
<xen/*.ml{,i}>: use_xenstore_server
<xen/*.ml{,i}>: use_xenstore
<xen/*.ml{,i}>: pkg_lwt
<xen/*.ml{,i}>: pkg_mirage
<xen/*.ml{,i}>: pkg_cstruct
<xen/*.ml{,i}>: pkg_cstruct.syntax
<xen/sleep.{m.o,native,byte}>: custom
# Executable xs_test
<lib_test/xs_test.{m.o,native,byte}>: use_xenstore
<lib_test/xs_test.{m.o,native,byte}>: pkg_lwt
<lib_test/xs_test.{m.o,native,byte}>: pkg_oUnit
<lib_test/xs_test.{m.o,native,byte}>: pkg_cstruct
<lib_test/xs_test.{m.o,native,byte}>: pkg_cstruct.syntax
<lib_test/*.ml{,i}>: use_xenstore
<lib_test/*.ml{,i}>: pkg_lwt
<lib_test/*.ml{,i}>: pkg_oUnit
<lib_test/*.ml{,i}>: pkg_cstruct
<lib_test/*.ml{,i}>: pkg_cstruct.syntax
<lib_test/xs_test.{m.o,native,byte}>: custom
# Executable server_test
<server_test/server_test.{m.o,native,byte}>: use_xenstore_server
<server_test/server_test.{m.o,native,byte}>: use_xenstore
<server_test/server_test.{m.o,native,byte}>: pkg_lwt
<server_test/server_test.{m.o,native,byte}>: pkg_oUnit
<server_test/server_test.{m.o,native,byte}>: pkg_mirage
<server_test/server_test.{m.o,native,byte}>: pkg_cstruct
<server_test/server_test.{m.o,native,byte}>: pkg_cstruct.syntax
<server_test/*.ml{,i}>: use_xenstore_server
<server_test/*.ml{,i}>: use_xenstore
<server_test/*.ml{,i}>: pkg_lwt
<server_test/*.ml{,i}>: pkg_oUnit
<server_test/*.ml{,i}>: pkg_mirage
<server_test/*.ml{,i}>: pkg_cstruct
<server_test/*.ml{,i}>: pkg_cstruct.syntax
<server_test/server_test.{m.o,native,byte}>: custom
# Executable server_unix
<server_unix/server_unix.{m.o,native,byte}>: use_xenstore_unix
<server_unix/server_unix.{m.o,native,byte}>: use_xenstore_server
<server_unix/server_unix.{m.o,native,byte}>: use_xenstore
<server_unix/server_unix.{m.o,native,byte}>: pkg_lwt
<server_unix/server_unix.{m.o,native,byte}>: pkg_lwt.unix
<server_unix/server_unix.{m.o,native,byte}>: pkg_cstruct
<server_unix/server_unix.{m.o,native,byte}>: pkg_cstruct.syntax
<server_unix/*.ml{,i}>: use_xenstore_unix
<server_unix/*.ml{,i}>: use_xenstore_server
<server_unix/*.ml{,i}>: use_xenstore
<server_unix/*.ml{,i}>: pkg_lwt
<server_unix/*.ml{,i}>: pkg_lwt.unix
<server_unix/*.ml{,i}>: pkg_cstruct
<server_unix/*.ml{,i}>: pkg_cstruct.syntax
<server_unix/server_unix.{m.o,native,byte}>: custom
# Executable xs
<cli/xs_client_cli.{m.o,native,byte}>: use_xenstore_unix
<cli/xs_client_cli.{m.o,native,byte}>: use_xenstore_server
<cli/xs_client_cli.{m.o,native,byte}>: use_xenstore_client
<cli/xs_client_cli.{m.o,native,byte}>: use_xenstore
<cli/xs_client_cli.{m.o,native,byte}>: pkg_lwt
<cli/xs_client_cli.{m.o,native,byte}>: pkg_lwt.unix
<cli/xs_client_cli.{m.o,native,byte}>: pkg_cstruct
<cli/xs_client_cli.{m.o,native,byte}>: pkg_cstruct.syntax
<cli/*.ml{,i}>: use_xenstore_unix
<cli/*.ml{,i}>: use_xenstore_server
<cli/*.ml{,i}>: use_xenstore_client
<cli/*.ml{,i}>: use_xenstore
<cli/*.ml{,i}>: pkg_lwt
<cli/*.ml{,i}>: pkg_lwt.unix
<cli/*.ml{,i}>: pkg_cstruct
<cli/*.ml{,i}>: pkg_cstruct.syntax
<cli/xs_client_cli.{m.o,native,byte}>: custom
# Executable xsbench
<bench/xs_bench.{m.o,native,byte}>: use_xenstore_unix
<bench/xs_bench.{m.o,native,byte}>: use_xenstore_server
<bench/xs_bench.{m.o,native,byte}>: use_xenstore_client
<bench/xs_bench.{m.o,native,byte}>: use_xenstore
<bench/xs_bench.{m.o,native,byte}>: pkg_lwt
<bench/xs_bench.{m.o,native,byte}>: pkg_lwt.unix
<bench/xs_bench.{m.o,native,byte}>: pkg_cstruct
<bench/xs_bench.{m.o,native,byte}>: pkg_cstruct.syntax
<bench/*.ml{,i}>: use_xenstore_unix
<bench/*.ml{,i}>: use_xenstore_server
<bench/*.ml{,i}>: use_xenstore_client
<bench/*.ml{,i}>: use_xenstore
<bench/*.ml{,i}>: pkg_lwt
<bench/*.ml{,i}>: pkg_lwt.unix
<bench/*.ml{,i}>: pkg_cstruct
<bench/*.ml{,i}>: pkg_cstruct.syntax
<bench/xs_bench.{m.o,native,byte}>: custom
# OASIS_STOP
true: annot
<*/*>: syntax_camlp4o
<*/*>: pkg_lwt.syntax
